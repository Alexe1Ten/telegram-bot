@startuml architecture

left to right direction

package frameworksAndDrivers <<Layer>> {
    package configuration {
        class AsyncConfig
        class OpenAiConfiguration
        class TelegramBotConfiguration
    }

    package openai {
        class ChatGPTService
        class ContextService
        package api {
            class ChatCompletionRequest
            class ChatCompletionResponse
            class Choice
            class CreateTranscriptionRequest
            class OpenAiClient
            class TranscribeVoiceToTextService
            class TranscriptionResponse
        }
    }

    package telegram {
        class TelegramBot {
            - TelegramUpdateMessageHandler
            - EditUserCommandHandler
            - ExportHandler
        }
    }

    package email {
        class EmailService
    }
}

package interfaceAdapters <<Layer>> {
    class ChatHistoryMapper
    package repositories {
        interface UserRepository
        interface UserInfoRepository
        interface ScheduleRepository
        interface ChatHistoryRepository
    }
}

package useCases <<Layer>> {
    package gpt {
        class ChatGptHistoryService
    }
    package command {
        class TelegramCommandDispatcher
        interface TelegramCommandHandler

        package handler {
            class ClearChatHistoryCommandHandler
            class ExportHandler
            class ImportFileHandler
            class NewMemberHandler
            class StartCommandHandler

            package edit {
                class CancelHandler
                class EditUserCommandHandler
                class EditUserContext
                class EditUserHandler
                class EditUserSelectionHandler
                class FieldValueConverter
                class NewValueFromUserHandler
            }
        }
    }
    package dto {
        class ChatHistoryDTO
        class MessageDTO
        class UserDTO
    }
    package enums {
        enum EditType
        enum ExportType
        enum TelegramCommands
    }
    package exceptions {
        class UserNotFoundException
    }
    package telegram {
        class TelegramFileService {
            - DefaultAbsSender defaultAbsSender
        }
        class TelegramAsyncMessageSendler {
            - DefaultAbsSender defaultAbsSender
            - ExecutorService executorService
        }
        class TelegramTextHandler
        class TelegramUpdateMessageHandler
        class TelegramVoiceHandler
        class TextConverter
    }
    class UserService {
        - UserRepository
        - UserInfoRepository
    }
    class ScheduleService {

    }
}

package entities <<Layer>> {
    class User
    class UserInfo
    class Schedule
    class ChatHistory
    class Message
    enum Role
    enum Position
    annotation AdminOnly
    annotation Displayable
    annotation FieldDisplayName
    annotation Modifiable
}

ChatCompletionRequest --> MessageDTO
ChatGptHistoryService ..> ChatHistoryRepository
ChatGptHistoryService --> ChatHistoryMapper
ChatGptHistoryService --> Message
ChatHistoryMapper --> ChatHistoryDTO
ChatHistoryMapper --> MessageDTO
ChatHistoryMapper --> ChatHistory
ChatHistoryMapper --> Message
ChatCompletionRequest --> MessageDTO
Choice --> MessageDTO
OpenAiClient --> ChatCompletionRequest
OpenAiClient --> ChatCompletionResponse
OpenAiClient --> CreateTranscriptionRequest
OpenAiClient --> TranscriptionResponse
TranscribeVoiceToTextService --> OpenAiClient
ChatGPTService --> OpenAiClient
ChatGPTService --> ChatGptHistoryService
ChatGPTService --> ContextService
ChatGPTService --> User
ChatGPTService --> ChatCompletionRequest
ChatGPTService --> ChatGptHistoryService
ChatGPTService --> ContextService
ChatGPTService --> MessageDTO
ContextService --> ChatGptHistoryService
ContextService --> MessageDTO
TelegramBot --> TelegramUpdateMessageHandler
TelegramBot --> EditUserCommandHandler
TelegramBot --> ExportHandler
ChatHistoryRepository --> ChatHistory
ScheduleRepository --> Schedule
UserInfoRepository --> UserInfo
UserRepository --> User
ScheduleService ..> ScheduleRepository
ScheduleService --> Schedule
UserService ..> UserRepository
UserService ..> UserInfoRepository
UserService --> EditUserContext
UserService --> Role
UserService --> User
UserService --> UserInfo
UserService --> UserNotFoundException
TelegramCommandDispatcher ..> TelegramCommandHandler
ClearChatHistoryCommandHandler ..|> TelegramCommandHandler
ClearChatHistoryCommandHandler --> ChatGptHistoryService
ClearChatHistoryCommandHandler --> TelegramCommands
ExportHandler ..|> TelegramCommandHandler
ExportHandler --> UserService
ExportHandler --> TelegramFileService
ExportHandler --> EmailService
ExportHandler --> ExportType
ExportHandler --> Displayable
ExportHandler --> User
ExportHandler --> UserInfo
ExportHandler --> TelegramCommands
ImportFileHandler ..|> TelegramCommandHandler
ImportFileHandler --> UserService
ImportFileHandler --> TelegramFileService
ImportFileHandler --> User
ImportFileHandler --> UserInfo
ImportFileHandler --> CancelHandler
ImportFileHandler --> EditUserContext
ImportFileHandler --> EditUserHandler
ImportFileHandler --> FieldValueConverter
ImportFileHandler --> EditType
ImportFileHandler --> TelegramCommands
NewMemberHandler --> UserService
NewMemberHandler --> Role
StartCommandHandler ..|> TelegramCommandHandler
StartCommandHandler --> TelegramCommands
EditUserCommandHandler ..|> TelegramCommandHandler
EditUserCommandHandler --> UserService
EditUserCommandHandler --> EditUserSelectionHandler
EditUserCommandHandler --> EditUserHandler
EditUserCommandHandler --> NewValueFromUserHandler
EditUserCommandHandler --> FieldDisplayName
EditUserCommandHandler --> User
EditUserCommandHandler --> UserInfo
EditUserCommandHandler --> EditType
EditUserCommandHandler --> TelegramCommands
EditUserCommandHandler --> UserNotFoundException
EditUserCommandHandler --> TelegramCommands
EditUserCommandHandler --> FieldValueConverter
EditUserContext --> EditType
EditUserHandler --> Displayable
EditUserHandler --> FieldDisplayName
EditUserHandler --> User
EditUserHandler --> UserInfo
EditUserHandler --> UserService
EditUserHandler --> EditType
EditUserHandler --> EditUserContext
EditUserSelectionHandler --> UserService
EditUserSelectionHandler --> User
EditUserSelectionHandler --> EditType
FieldValueConverter --> Position
FieldValueConverter --> Role
NewValueFromUserHandler --> UserService
NewValueFromUserHandler --> FieldDisplayName
NewValueFromUserHandler --> User
NewValueFromUserHandler --> UserInfo
NewValueFromUserHandler --> EditType
NewValueFromUserHandler --> EditUserContext
TelegramAsyncMessageSendler --> DefaultAbsSender
TelegramAsyncMessageSendler --> ExecutorService
TelegramFileService --> DefaultAbsSender
TelegramTextHandler --> ChatGPTService
TelegramUpdateMessageHandler --> TelegramCommandDispatcher
TelegramUpdateMessageHandler --> TelegramAsyncMessageSendler
TelegramUpdateMessageHandler --> TelegramTextHandler
TelegramUpdateMessageHandler --> TelegramVoiceHandler
TelegramUpdateMessageHandler --> NewMemberHandler
TelegramUpdateMessageHandler --> EditUserCommandHandler
TelegramUpdateMessageHandler --> ImportFileHandler
TelegramUpdateMessageHandler --> UserService
TelegramUpdateMessageHandler --> TelegramBot
TelegramUpdateMessageHandler --> EditUserContext
TelegramVoiceHandler --> TelegramFileService
TelegramVoiceHandler --> TranscribeVoiceToTextService
TelegramVoiceHandler --> ChatGPTService



frameworksAndDrivers -> interfaceAdapters
interfaceAdapters -> useCases
useCases -> entities

@enduml
